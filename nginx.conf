user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
	worker_connections 768;
	# multi_accept on;
}

http {
	include		/etc/nginx/mime.types;
	map $http_upgrade $connection_upgrade {
	    default upgrade;
	    ''   '';
	}

# Server configuration
#
server {

        # SSL configuration (this is generated by certbot)
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/cycling-frontend;

        index index.html index.htm index.nginx-debian.html;

        server_name cycling-backend.anyways.eu;
		
		# Serving the static pages from disk
        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                root /var/www/cycling-frontend;
                try_files $uri $uri/ =404;
        }

		# We run the cycling-backend on the same server. 
		# Since it's a dotnet application, requests will have to be proxied to the port the application is
		# listening to.
        location /api/ {
                proxy_pass http://localhost:5000/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection keep-alive;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Forwarded-For $remote_addr;
                proxy_cache_bypass $http_upgrade;
                add_header X-Cache-Status $upstream_cache_status;
        }

		# Deploying a second version of the backend for test purposes is also possible. Just change the port.
        location /test-api/ {
                proxy_pass http://localhost:5001/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection keep-alive;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Forwarded-For $remote_addr;
                proxy_cache_bypass $http_upgrade;
                add_header X-Cache-Status $upstream_cache_status;
        }


        # Redirect server error pages to the static page /50x.html
        error_page      500 502 503 504  /50x.html;
        location = /50x.html {
                root    /usr/share/nginx/html;
        }
}
}
